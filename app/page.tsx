import { Metadata } from "next";
import Header from "@/components/home/header/Header";
import Banner from "@/components/home/banner/Banner";
import requests from "@/utils/requests";
import Row from "@/components/home/row/Row";
import ModalData from "@/components/home/ModalData";
import Plans from "./plans/page";
import { collection, getDocs, query, where } from "firebase/firestore";
import { db } from "@/firebase";
import { Subscriptions } from "@/components/home/Subscriptions";
import HomePage from "@/components/home/HomePage";

export const metadata: Metadata = {
  title: "Home - Netflix",
  description: "Generated by create next app",
  icons: {
    icon: "favicon.ico",
  },
};

export default async function Home() {
  const q = query(collection(db, "products"), where("active", "==", true));

  const querySnapshot = await getDocs(q);

  const productPromises = querySnapshot.docs.map(async (productDoc) => {
    let productInfo = productDoc.data();

    const pricesCollection = collection(productDoc.ref, "prices");
    const priceQuerySnapshot = await getDocs(pricesCollection);

    const priceDoc = priceQuerySnapshot.docs[0];

    productInfo["priceId"] = priceDoc?.id;
    productInfo["priceInfo"] = priceDoc?.data();

    return productInfo;
  });

  const products = await Promise.all(productPromises);

  const [
    netflixOriginals,
    trendingNow,
    topRated,
    actionMovies,
    comedyMovies,
    horrorMovies,
    romanceMovies,
    animationMovies,
  ] = await Promise.all([
    fetch(requests.fetchNetflixOriginals, { next: { revalidate: 600 } }).then(
      (res) => res.json()
    ),
    fetch(requests.fetchTrending, { next: { revalidate: 600 } }).then((res) =>
      res.json()
    ),
    fetch(requests.fetchTopRated, { next: { revalidate: 600 } }).then((res) =>
      res.json()
    ),
    fetch(requests.fetchActionMovies, { next: { revalidate: 600 } }).then(
      (res) => res.json()
    ),
    fetch(requests.fetchComedyMovies, { next: { revalidate: 600 } }).then(
      (res) => res.json()
    ),
    fetch(requests.fetchHorrorMovies, { next: { revalidate: 600 } }).then(
      (res) => res.json()
    ),
    fetch(requests.fetchRomanceMovies, { next: { revalidate: 600 } }).then(
      (res) => res.json()
    ),
    fetch(requests.fetchAnimationMovies, { next: { revalidate: 600 } }).then(
      (res) => res.json()
    ),
  ]);

  return (
    <div>
      <HomePage
        products={products}
        netflixOriginals={netflixOriginals.results}
        trendingNow={trendingNow.results}
        topRated={topRated.results}
        comedyMovies={comedyMovies.results}
        actionMovies={actionMovies.results}
        horrorMovies={horrorMovies.results}
        romanceMovies={romanceMovies.results}
        animationMovies={animationMovies.results}
      />
    </div>
  );
}
